// Code generated by hertz generator. DO NOT EDIT.

package Practice

import (
	Practice "auth/biz/adaptor/controller/Practice"
	"auth/biz/adaptor/middleware"
	"github.com/cloudwego/hertz/pkg/app/server"
)

/*
 This file will register all the routes of the services in the master idl.
 And it will update automatically when you use the "update" command for the idl.
 So don't modify the contents of the file, or your code will be deleted when it is updated.
*/

// Register register routes based on the IDL 'api.${HTTP Method}' annotation.
func Register(r *server.Hertz) {
	// 身份验证相关路由
	auth := r.Group("/api/auth")
	{
		// 公开路由 - 不需要身份验证
		auth.POST("/send-code", Practice.SendVerificationCode)      // 发送验证码
		auth.POST("/verify-code", Practice.VerifyCode)              // 验证验证码
		auth.POST("/register", Practice.Register)                   // 用户注册
		auth.POST("/login", Practice.Login)                         // 用户登录

		// 需要身份验证的路由
		authRequired := auth.Group("", middleware.JWTAuth())
		{
			authRequired.GET("/user-info", Practice.GetUserInfo)     // 获取用户信息
			authRequired.POST("/kick", Practice.KickUser)            // 踢出用户（管理员功能）
		}
	}
}
